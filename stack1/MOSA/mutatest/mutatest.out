2023-03-05 01:44:22,987: Running clean trial
============================= test session starts ==============================
platform linux -- Python 3.10.10, pytest-7.2.1, pluggy-1.0.0
rootdir: /home/auri/temp/lucca/python_experiments/stack1
collected 14 items

MOSA/test_stack1_MOSA.py ..............                                  [100%]

============================== 14 passed in 0.23s ==============================
2023-03-05 01:44:24,094: [92m35 mutation targets found in stack1.py AST.[0m
2023-03-05 01:44:24,094: Setting random.seed to: None
2023-03-05 01:44:24,095: Coverage file does not exist, proceeding to sample from all targets.
2023-03-05 01:44:24,095: Total sample space size: 35
2023-03-05 01:44:24,095: [92mSelecting 10 locations from 35 potentials.[0m
2023-03-05 01:44:24,095: Starting individual mutation trials!
2023-03-05 01:44:24,095: Running serial (single processor) dispatch mode.
2023-03-05 01:44:24,096: Current target location: stack1.py, LocIndex(ast_class='NameConstant', lineno=76, col_offset=15, op_type=True, end_lineno=76, end_col_offset=19)
2023-03-05 01:44:25,355: [92mResult: Detected at stack1.py: (76, 15)[0m
2023-03-05 01:44:26,697: [92mResult: Detected at stack1.py: (76, 15)[0m
2023-03-05 01:44:26,697: Current target location: stack1.py, LocIndex(ast_class='If', lineno=39, col_offset=8, op_type='If_Statement', end_lineno=42, end_col_offset=32)
2023-03-05 01:44:27,922: [92mResult: Detected at stack1.py: (39, 8)[0m
2023-03-05 01:44:29,051: [92mResult: Detected at stack1.py: (39, 8)[0m
2023-03-05 01:44:29,051: Current target location: stack1.py, LocIndex(ast_class='BinOp', lineno=99, col_offset=29, op_type=<class 'ast.Pow'>, end_lineno=99, end_col_offset=35)
2023-03-05 01:44:30,111: [91mResult: Survived at stack1.py: (99, 29)[0m
2023-03-05 01:44:31,219: [91mResult: Survived at stack1.py: (99, 29)[0m
2023-03-05 01:44:32,330: [91mResult: Survived at stack1.py: (99, 29)[0m
2023-03-05 01:44:33,427: [91mResult: Survived at stack1.py: (99, 29)[0m
2023-03-05 01:44:34,519: [91mResult: Survived at stack1.py: (99, 29)[0m
2023-03-05 01:44:35,751: [91mResult: Survived at stack1.py: (99, 29)[0m
2023-03-05 01:44:35,752: Current target location: stack1.py, LocIndex(ast_class='Compare', lineno=72, col_offset=7, op_type=<class 'ast.NotEq'>, end_lineno=72, end_col_offset=22)
2023-03-05 01:44:36,940: [92mResult: Detected at stack1.py: (72, 7)[0m
2023-03-05 01:44:38,207: [92mResult: Detected at stack1.py: (72, 7)[0m
2023-03-05 01:44:39,331: [91mResult: Survived at stack1.py: (72, 7)[0m
2023-03-05 01:44:40,537: [92mResult: Detected at stack1.py: (72, 7)[0m
2023-03-05 01:44:41,907: [92mResult: Detected at stack1.py: (72, 7)[0m
2023-03-05 01:44:41,908: Current target location: stack1.py, LocIndex(ast_class='If', lineno=66, col_offset=16, op_type='If_Statement', end_lineno=67, end_col_offset=32)
2023-03-05 01:44:42,923: [91mResult: Survived at stack1.py: (66, 16)[0m
2023-03-05 01:44:44,003: [91mResult: Survived at stack1.py: (66, 16)[0m
2023-03-05 01:44:44,004: Current target location: stack1.py, LocIndex(ast_class='BinOp', lineno=96, col_offset=29, op_type=<class 'ast.Mult'>, end_lineno=96, end_col_offset=34)
2023-03-05 01:44:45,164: [91mResult: Survived at stack1.py: (96, 29)[0m
2023-03-05 01:44:46,423: [91mResult: Survived at stack1.py: (96, 29)[0m
2023-03-05 01:44:47,603: [91mResult: Survived at stack1.py: (96, 29)[0m
2023-03-05 01:44:48,679: [91mResult: Survived at stack1.py: (96, 29)[0m
2023-03-05 01:44:49,839: [91mResult: Survived at stack1.py: (96, 29)[0m
2023-03-05 01:44:50,795: [91mResult: Survived at stack1.py: (96, 29)[0m
2023-03-05 01:44:50,796: Current target location: stack1.py, LocIndex(ast_class='AugAssign', lineno=35, col_offset=12, op_type='AugAssign_Sub', end_lineno=35, end_col_offset=26)
2023-03-05 01:44:51,914: [91mResult: Survived at stack1.py: (35, 12)[0m
2023-03-05 01:44:53,143: [91mResult: Survived at stack1.py: (35, 12)[0m
2023-03-05 01:44:54,285: [91mResult: Survived at stack1.py: (35, 12)[0m
2023-03-05 01:44:54,285: Current target location: stack1.py, LocIndex(ast_class='BinOp', lineno=98, col_offset=29, op_type=<class 'ast.Mod'>, end_lineno=98, end_col_offset=34)
2023-03-05 01:44:55,299: [91mResult: Survived at stack1.py: (98, 29)[0m
2023-03-05 01:44:56,344: [91mResult: Survived at stack1.py: (98, 29)[0m
2023-03-05 01:44:57,586: [91mResult: Survived at stack1.py: (98, 29)[0m
2023-03-05 01:44:58,563: [91mResult: Survived at stack1.py: (98, 29)[0m
2023-03-05 01:44:59,420: [91mResult: Survived at stack1.py: (98, 29)[0m
2023-03-05 01:45:00,486: [91mResult: Survived at stack1.py: (98, 29)[0m
2023-03-05 01:45:00,486: Current target location: stack1.py, LocIndex(ast_class='Compare', lineno=130, col_offset=7, op_type=<class 'ast.Gt'>, end_lineno=130, end_col_offset=21)
2023-03-05 01:45:01,551: [91mResult: Survived at stack1.py: (130, 7)[0m
2023-03-05 01:45:02,685: [92mResult: Detected at stack1.py: (130, 7)[0m
2023-03-05 01:45:03,851: [92mResult: Detected at stack1.py: (130, 7)[0m
2023-03-05 01:45:04,914: [91mResult: Survived at stack1.py: (130, 7)[0m
2023-03-05 01:45:06,231: [92mResult: Detected at stack1.py: (130, 7)[0m
2023-03-05 01:45:06,232: Current target location: stack1.py, LocIndex(ast_class='If', lineno=72, col_offset=4, op_type='If_Statement', end_lineno=76, end_col_offset=19)
2023-03-05 01:45:07,371: [92mResult: Detected at stack1.py: (72, 4)[0m
2023-03-05 01:45:08,559: [92mResult: Detected at stack1.py: (72, 4)[0m
2023-03-05 01:45:08,560: Running clean trial
============================= test session starts ==============================
platform linux -- Python 3.10.10, pytest-7.2.1, pluggy-1.0.0
rootdir: /home/auri/temp/lucca/python_experiments/stack1
collected 14 items

MOSA/test_stack1_MOSA.py ..............                                  [100%]

============================== 14 passed in 0.15s ==============================
2023-03-05 01:45:09,600: CLI Report:

Mutatest diagnostic summary
===========================
 - Source location: /home/auri/temp/lucca/python_experiments/stack1/stack1.py
 - Test commands: ['python', '-m', 'pytest', './MOSA']
 - Mode: f
 - Excluded files: []
 - N locations input: 10
 - Random seed: None

Random sample details
---------------------
 - Total locations mutated: 10
 - Total locations identified: 35
 - Location sample coverage: 28.57 %


Running time details
--------------------
 - Clean trial 1 run time: 0:00:01.088935
 - Clean trial 2 run time: 0:00:01.039193
 - Mutation trials total run time: 0:00:44.469540

2023-03-05 01:45:09,600: Trial Summary Report:

Overall mutation trial summary
==============================
 - DETECTED: 13
 - SURVIVED: 26
 - TOTAL RUNS: 39
 - RUN DATETIME: 2023-03-05 01:45:09.599961

2023-03-05 01:45:09,600: Detected mutations:[92m

DETECTED
--------
 - stack1.py: (l: 39, c: 8) - mutation from If_Statement to If_True
 - stack1.py: (l: 39, c: 8) - mutation from If_Statement to If_False
 - stack1.py: (l: 72, c: 4) - mutation from If_Statement to If_False
 - stack1.py: (l: 72, c: 4) - mutation from If_Statement to If_True
 - stack1.py: (l: 72, c: 7) - mutation from <class 'ast.NotEq'> to <class 'ast.Eq'>
 - stack1.py: (l: 72, c: 7) - mutation from <class 'ast.NotEq'> to <class 'ast.Lt'>
 - stack1.py: (l: 72, c: 7) - mutation from <class 'ast.NotEq'> to <class 'ast.GtE'>
 - stack1.py: (l: 72, c: 7) - mutation from <class 'ast.NotEq'> to <class 'ast.LtE'>
 - stack1.py: (l: 76, c: 15) - mutation from True to False
 - stack1.py: (l: 76, c: 15) - mutation from True to None
 - stack1.py: (l: 130, c: 7) - mutation from <class 'ast.Gt'> to <class 'ast.GtE'>
 - stack1.py: (l: 130, c: 7) - mutation from <class 'ast.Gt'> to <class 'ast.Eq'>
 - stack1.py: (l: 130, c: 7) - mutation from <class 'ast.Gt'> to <class 'ast.LtE'>[0m

2023-03-05 01:45:09,600: Timedout mutations:

2023-03-05 01:45:09,600: Surviving mutations:[91m

SURVIVED
--------
 - stack1.py: (l: 35, c: 12) - mutation from AugAssign_Sub to AugAssign_Mult
 - stack1.py: (l: 35, c: 12) - mutation from AugAssign_Sub to AugAssign_Add
 - stack1.py: (l: 35, c: 12) - mutation from AugAssign_Sub to AugAssign_Div
 - stack1.py: (l: 66, c: 16) - mutation from If_Statement to If_False
 - stack1.py: (l: 66, c: 16) - mutation from If_Statement to If_True
 - stack1.py: (l: 72, c: 7) - mutation from <class 'ast.NotEq'> to <class 'ast.Gt'>
 - stack1.py: (l: 96, c: 29) - mutation from <class 'ast.Mult'> to <class 'ast.Sub'>
 - stack1.py: (l: 96, c: 29) - mutation from <class 'ast.Mult'> to <class 'ast.Div'>
 - stack1.py: (l: 96, c: 29) - mutation from <class 'ast.Mult'> to <class 'ast.Add'>
 - stack1.py: (l: 96, c: 29) - mutation from <class 'ast.Mult'> to <class 'ast.Pow'>
 - stack1.py: (l: 96, c: 29) - mutation from <class 'ast.Mult'> to <class 'ast.FloorDiv'>
 - stack1.py: (l: 96, c: 29) - mutation from <class 'ast.Mult'> to <class 'ast.Mod'>
 - stack1.py: (l: 98, c: 29) - mutation from <class 'ast.Mod'> to <class 'ast.FloorDiv'>
 - stack1.py: (l: 98, c: 29) - mutation from <class 'ast.Mod'> to <class 'ast.Div'>
 - stack1.py: (l: 98, c: 29) - mutation from <class 'ast.Mod'> to <class 'ast.Add'>
 - stack1.py: (l: 98, c: 29) - mutation from <class 'ast.Mod'> to <class 'ast.Pow'>
 - stack1.py: (l: 98, c: 29) - mutation from <class 'ast.Mod'> to <class 'ast.Mult'>
 - stack1.py: (l: 98, c: 29) - mutation from <class 'ast.Mod'> to <class 'ast.Sub'>
 - stack1.py: (l: 99, c: 29) - mutation from <class 'ast.Pow'> to <class 'ast.Sub'>
 - stack1.py: (l: 99, c: 29) - mutation from <class 'ast.Pow'> to <class 'ast.Div'>
 - stack1.py: (l: 99, c: 29) - mutation from <class 'ast.Pow'> to <class 'ast.Mod'>
 - stack1.py: (l: 99, c: 29) - mutation from <class 'ast.Pow'> to <class 'ast.Mult'>
 - stack1.py: (l: 99, c: 29) - mutation from <class 'ast.Pow'> to <class 'ast.Add'>
 - stack1.py: (l: 99, c: 29) - mutation from <class 'ast.Pow'> to <class 'ast.FloorDiv'>
 - stack1.py: (l: 130, c: 7) - mutation from <class 'ast.Gt'> to <class 'ast.Lt'>
 - stack1.py: (l: 130, c: 7) - mutation from <class 'ast.Gt'> to <class 'ast.NotEq'>[0m

2023-03-05 01:45:09,601: Writing output report to: /home/auri/temp/lucca/python_experiments/stack1/MOSA/mutatest/MOSA-report.rst
