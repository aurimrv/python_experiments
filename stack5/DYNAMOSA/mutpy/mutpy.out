[*] Start mutation process:
   - targets: stack5.py
   - tests: ./DYNAMOSA
[*] 3 tests passed:
   - test_stack5 [0.08175 s]
[*] Start mutants generation and execution:
   - [#   1] CDI stack5: 
--------------------------------------------------------------------------------
   1: class Stack(object):
   2:     
-  3:     def __init__(self, top=None):
-  4:         self.top = top
-  5:     
+  3:     @classmethod
+  4:     def __init__(self, top=None):
+  5:         self.top = top
   6:     def push(self, data):
   7:         self.top = Node(data, self.top)
   8:     
   9:     def pop(self):
--------------------------------------------------------------------------------
[0.05727 s] survived
   - [#   2] CDI stack5: 
--------------------------------------------------------------------------------
   2:     
   3:     def __init__(self, top=None):
   4:         self.top = top
   5:     
-  6:     def push(self, data):
-  7:         self.top = Node(data, self.top)
-  8:     
+  6:     @classmethod
+  7:     def push(self, data):
+  8:         self.top = Node(data, self.top)
   9:     def pop(self):
  10:         if self.top is None:
  11:             return None
  12:         data = self.top.data
--------------------------------------------------------------------------------
[0.06689 s] killed by DYNAMOSA/test_stack5.py::test_case_4

def test_case_4():
        bytes_0 = b"\x94\xc5\xfeh^\xfcI\x14\xdc\xbeR\x8f"
        int_0 = -437
        stack_0 = module_0.Stack(int_0)
>       var_0 = stack_0.push(bytes_0)

DYNAMOSA/test_stack5.py:46: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack5.Stack'>, data = b'\x94\xc5\xfeh^\xfcI\x14\xdc\xbeR\x8f'

>   ???
E   AttributeError: type object 'Stack' has no attribute 'top'. Did you mean: 'pop'?

stack5:8: AttributeError
   - [#   3] CDI stack5: 
--------------------------------------------------------------------------------
   5:     
   6:     def push(self, data):
   7:         self.top = Node(data, self.top)
   8:     
-  9:     def pop(self):
- 10:         if self.top is None:
- 11:             return None
- 12:         data = self.top.data
- 13:         self.top = self.top.next
- 14:         return data
- 15:     
+  9:     @classmethod
+ 10:     def pop(self):
+ 11:         if self.top is None:
+ 12:             return None
+ 13:         data = self.top.data
+ 14:         self.top = self.top.next
+ 15:         return data
  16:     def peek(self):
  17:         return self.top.data if self.top is not None else None
  18:     
  19:     def is_empty(self):
--------------------------------------------------------------------------------
[0.05872 s] killed by DYNAMOSA/test_stack5.py::test_case_0

def test_case_0():
        stack_0 = module_0.Stack()
>       var_0 = stack_0.pop()

DYNAMOSA/test_stack5.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack5.Stack'>

>   ???
E   AttributeError: type object 'Stack' has no attribute 'top'. Did you mean: 'pop'?

stack5:11: AttributeError
   - [#   4] CDI stack5: 
--------------------------------------------------------------------------------
  12:         data = self.top.data
  13:         self.top = self.top.next
  14:         return data
  15:     
- 16:     def peek(self):
- 17:         return self.top.data if self.top is not None else None
- 18:     
+ 16:     @classmethod
+ 17:     def peek(self):
+ 18:         return self.top.data if self.top is not None else None
  19:     def is_empty(self):
  20:         return self.peek() is None
  21: 
  22: class Node(object):
--------------------------------------------------------------------------------
[0.05677 s] killed by DYNAMOSA/test_stack5.py::test_case_5

def test_case_5():
        stack_0 = module_0.Stack()
        var_0 = stack_0.pop()
        none_type_0 = None
>       var_1 = stack_0.is_empty()

DYNAMOSA/test_stack5.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack5:20: in is_empty
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <class 'stack5.Stack'>

>   ???
E   AttributeError: type object 'Stack' has no attribute 'top'. Did you mean: 'pop'?

stack5:18: AttributeError
   - [#   5] CDI stack5: 
--------------------------------------------------------------------------------
  15:     
  16:     def peek(self):
  17:         return self.top.data if self.top is not None else None
  18:     
- 19:     def is_empty(self):
- 20:         return self.peek() is None
- 21: 
+ 19:     @classmethod
+ 20:     def is_empty(self):
+ 21:         return self.peek() is None
  22: class Node(object):
  23:     
  24:     def __init__(self, data, next=None):
  25:         self.data = data
--------------------------------------------------------------------------------
[0.06004 s] incompetent

TypeError: stack5:21: TypeError: Stack.peek() missing 1 required positional argument: 'self'

   - [#   6] CDI stack5: 
--------------------------------------------------------------------------------
  20:         return self.peek() is None
  21: 
  22: class Node(object):
  23:     
- 24:     def __init__(self, data, next=None):
- 25:         self.data = data
- 26:         self.next = next
+ 24:     @classmethod
+ 25:     def __init__(self, data, next=None):
+ 26:         self.data = data
+ 27:         self.next = next
--------------------------------------------------------------------------------
[0.05537 s] survived
   - [#   7] COI stack5: 
--------------------------------------------------------------------------------
   6:     def push(self, data):
   7:         self.top = Node(data, self.top)
   8:     
   9:     def pop(self):
- 10:         if self.top is None:
+ 10:         if not (self.top is None):
  11:             return None
  12:         data = self.top.data
  13:         self.top = self.top.next
  14:         return data
--------------------------------------------------------------------------------
[0.04935 s] killed by DYNAMOSA/test_stack5.py::test_case_0

def test_case_0():
        stack_0 = module_0.Stack()
>       var_0 = stack_0.pop()

DYNAMOSA/test_stack5.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack5.Stack object at 0x7f3add8b8f70>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

stack5:12: AttributeError
   - [#   8] SDI stack5: 
--------------------------------------------------------------------------------
   1: class Stack(object):
   2:     
-  3:     def __init__(self, top=None):
-  4:         self.top = top
-  5:     
+  3:     @staticmethod
+  4:     def __init__(self, top=None):
+  5:         self.top = top
   6:     def push(self, data):
   7:         self.top = Node(data, self.top)
   8:     
   9:     def pop(self):
--------------------------------------------------------------------------------
[0.04532 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/stack5/DYNAMOSA/test_stack5.py:7: TypeError: Stack.__init__() missing 1 required positional argument: 'self'

   - [#   9] SDI stack5: 
--------------------------------------------------------------------------------
   2:     
   3:     def __init__(self, top=None):
   4:         self.top = top
   5:     
-  6:     def push(self, data):
-  7:         self.top = Node(data, self.top)
-  8:     
+  6:     @staticmethod
+  7:     def push(self, data):
+  8:         self.top = Node(data, self.top)
   9:     def pop(self):
  10:         if self.top is None:
  11:             return None
  12:         data = self.top.data
--------------------------------------------------------------------------------
[0.05780 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/stack5/DYNAMOSA/test_stack5.py:46: TypeError: Stack.push() missing 1 required positional argument: 'data'

   - [#  10] SDI stack5: 
--------------------------------------------------------------------------------
   5:     
   6:     def push(self, data):
   7:         self.top = Node(data, self.top)
   8:     
-  9:     def pop(self):
- 10:         if self.top is None:
- 11:             return None
- 12:         data = self.top.data
- 13:         self.top = self.top.next
- 14:         return data
- 15:     
+  9:     @staticmethod
+ 10:     def pop(self):
+ 11:         if self.top is None:
+ 12:             return None
+ 13:         data = self.top.data
+ 14:         self.top = self.top.next
+ 15:         return data
  16:     def peek(self):
  17:         return self.top.data if self.top is not None else None
  18:     
  19:     def is_empty(self):
--------------------------------------------------------------------------------
[0.04933 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/stack5/DYNAMOSA/test_stack5.py:8: TypeError: Stack.pop() missing 1 required positional argument: 'self'

   - [#  11] SDI stack5: 
--------------------------------------------------------------------------------
  12:         data = self.top.data
  13:         self.top = self.top.next
  14:         return data
  15:     
- 16:     def peek(self):
- 17:         return self.top.data if self.top is not None else None
- 18:     
+ 16:     @staticmethod
+ 17:     def peek(self):
+ 18:         return self.top.data if self.top is not None else None
  19:     def is_empty(self):
  20:         return self.peek() is None
  21: 
  22: class Node(object):
--------------------------------------------------------------------------------
[0.05465 s] incompetent

TypeError: stack5:20: TypeError: Stack.peek() missing 1 required positional argument: 'self'

   - [#  12] SDI stack5: 
--------------------------------------------------------------------------------
  15:     
  16:     def peek(self):
  17:         return self.top.data if self.top is not None else None
  18:     
- 19:     def is_empty(self):
- 20:         return self.peek() is None
- 21: 
+ 19:     @staticmethod
+ 20:     def is_empty(self):
+ 21:         return self.peek() is None
  22: class Node(object):
  23:     
  24:     def __init__(self, data, next=None):
  25:         self.data = data
--------------------------------------------------------------------------------
[0.05695 s] incompetent

TypeError: /home/auri/temp/lucca/python_experiments/stack5/DYNAMOSA/test_stack5.py:53: TypeError: Stack.is_empty() missing 1 required positional argument: 'self'

   - [#  13] SDI stack5: 
--------------------------------------------------------------------------------
  20:         return self.peek() is None
  21: 
  22: class Node(object):
  23:     
- 24:     def __init__(self, data, next=None):
- 25:         self.data = data
- 26:         self.next = next
+ 24:     @staticmethod
+ 25:     def __init__(self, data, next=None):
+ 26:         self.data = data
+ 27:         self.next = next
--------------------------------------------------------------------------------
[0.05648 s] killed by DYNAMOSA/test_stack5.py::test_case_4

def test_case_4():
        bytes_0 = b"\x94\xc5\xfeh^\xfcI\x14\xdc\xbeR\x8f"
        int_0 = -437
        stack_0 = module_0.Stack(int_0)
>       var_0 = stack_0.push(bytes_0)

DYNAMOSA/test_stack5.py:46: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack5:7: in push
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = b'\x94\xc5\xfeh^\xfcI\x14\xdc\xbeR\x8f', data = -437, next = None

>   ???
E   AttributeError: 'bytes' object has no attribute 'data'

stack5:26: AttributeError
   - [#  14] SDL stack5: 
--------------------------------------------------------------------------------
   1: class Stack(object):
   2:     
   3:     def __init__(self, top=None):
-  4:         self.top = top
+  4:         pass
   5:     
   6:     def push(self, data):
   7:         self.top = Node(data, self.top)
   8:     
--------------------------------------------------------------------------------
[0.04623 s] killed by DYNAMOSA/test_stack5.py::test_case_0

def test_case_0():
        stack_0 = module_0.Stack()
>       var_0 = stack_0.pop()

DYNAMOSA/test_stack5.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack5.Stack object at 0x7f3add8ba4d0>

>   ???
E   AttributeError: 'Stack' object has no attribute 'top'. Did you mean: 'pop'?

stack5:10: AttributeError
   - [#  15] SDL stack5: 
--------------------------------------------------------------------------------
   3:     def __init__(self, top=None):
   4:         self.top = top
   5:     
   6:     def push(self, data):
-  7:         self.top = Node(data, self.top)
+  7:         pass
   8:     
   9:     def pop(self):
  10:         if self.top is None:
  11:             return None
--------------------------------------------------------------------------------
[0.05390 s] survived
   - [#  16] SDL stack5: 
--------------------------------------------------------------------------------
   7:         self.top = Node(data, self.top)
   8:     
   9:     def pop(self):
  10:         if self.top is None:
- 11:             return None
+ 11:             pass
  12:         data = self.top.data
  13:         self.top = self.top.next
  14:         return data
  15:     
--------------------------------------------------------------------------------
[0.04840 s] killed by DYNAMOSA/test_stack5.py::test_case_0

def test_case_0():
        stack_0 = module_0.Stack()
>       var_0 = stack_0.pop()

DYNAMOSA/test_stack5.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack5.Stack object at 0x7f3add74ceb0>

>   ???
E   AttributeError: 'NoneType' object has no attribute 'data'

stack5:12: AttributeError
   - [#  17] SDL stack5: 
--------------------------------------------------------------------------------
   8:     
   9:     def pop(self):
  10:         if self.top is None:
  11:             return None
- 12:         data = self.top.data
+ 12:         pass
  13:         self.top = self.top.next
  14:         return data
  15:     
  16:     def peek(self):
--------------------------------------------------------------------------------
[0.05444 s] survived
   - [#  18] SDL stack5: 
--------------------------------------------------------------------------------
   9:     def pop(self):
  10:         if self.top is None:
  11:             return None
  12:         data = self.top.data
- 13:         self.top = self.top.next
+ 13:         pass
  14:         return data
  15:     
  16:     def peek(self):
  17:         return self.top.data if self.top is not None else None
--------------------------------------------------------------------------------
[0.05463 s] survived
   - [#  19] SDL stack5: 
--------------------------------------------------------------------------------
  10:         if self.top is None:
  11:             return None
  12:         data = self.top.data
  13:         self.top = self.top.next
- 14:         return data
+ 14:         pass
  15:     
  16:     def peek(self):
  17:         return self.top.data if self.top is not None else None
  18:     
--------------------------------------------------------------------------------
[0.05385 s] survived
   - [#  20] SDL stack5: 
--------------------------------------------------------------------------------
  13:         self.top = self.top.next
  14:         return data
  15:     
  16:     def peek(self):
- 17:         return self.top.data if self.top is not None else None
+ 17:         pass
  18:     
  19:     def is_empty(self):
  20:         return self.peek() is None
  21: 
--------------------------------------------------------------------------------
INTERNALERROR> Traceback (most recent call last):
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/_pytest/main.py", line 270, in wrap_session
INTERNALERROR>     session.exitstatus = doit(config, session) or 0
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/_pytest/main.py", line 324, in _main
INTERNALERROR>     config.hook.pytest_runtestloop(session=session)
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/pluggy/_hooks.py", line 265, in __call__
INTERNALERROR>     return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/pluggy/_manager.py", line 80, in _hookexec
INTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/pluggy/_callers.py", line 60, in _multicall
INTERNALERROR>     return outcome.get_result()
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/pluggy/_result.py", line 60, in get_result
INTERNALERROR>     raise ex[1].with_traceback(ex[2])
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/pluggy/_callers.py", line 39, in _multicall
INTERNALERROR>     res = hook_impl.function(*args)
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/_pytest/main.py", line 349, in pytest_runtestloop
INTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/pluggy/_hooks.py", line 265, in __call__
INTERNALERROR>     return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/pluggy/_manager.py", line 80, in _hookexec
INTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/pluggy/_callers.py", line 60, in _multicall
INTERNALERROR>     return outcome.get_result()
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/pluggy/_result.py", line 60, in get_result
INTERNALERROR>     raise ex[1].with_traceback(ex[2])
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/pluggy/_callers.py", line 39, in _multicall
INTERNALERROR>     res = hook_impl.function(*args)
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/_pytest/runner.py", line 112, in pytest_runtest_protocol
INTERNALERROR>     runtestprotocol(item, nextitem=nextitem)
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/_pytest/runner.py", line 131, in runtestprotocol
INTERNALERROR>     reports.append(call_and_report(item, "call", log))
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/_pytest/runner.py", line 224, in call_and_report
INTERNALERROR>     hook.pytest_runtest_logreport(report=report)
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/pluggy/_hooks.py", line 265, in __call__
INTERNALERROR>     return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/pluggy/_manager.py", line 80, in _hookexec
INTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/pluggy/_callers.py", line 60, in _multicall
INTERNALERROR>     return outcome.get_result()
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/pluggy/_result.py", line 60, in get_result
INTERNALERROR>     raise ex[1].with_traceback(ex[2])
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/pluggy/_callers.py", line 39, in _multicall
INTERNALERROR>     res = hook_impl.function(*args)
INTERNALERROR>   File "/home/auri/.pyenv/versions/3.10.8/envs/lucca/lib/python3.10/site-packages/mutpy/test_runners/pytest_runner.py", line 28, in pytest_runtest_logreport
INTERNALERROR>     if 'TypeError' in report.longrepr.reprcrash.message:
INTERNALERROR> AttributeError: 'str' object has no attribute 'reprcrash'
[0.05071 s] survived
   - [#  21] SDL stack5: 
--------------------------------------------------------------------------------
  16:     def peek(self):
  17:         return self.top.data if self.top is not None else None
  18:     
  19:     def is_empty(self):
- 20:         return self.peek() is None
+ 20:         pass
  21: 
  22: class Node(object):
  23:     
  24:     def __init__(self, data, next=None):
--------------------------------------------------------------------------------
[0.05509 s] survived
   - [#  22] SDL stack5: 
--------------------------------------------------------------------------------
  21: 
  22: class Node(object):
  23:     
  24:     def __init__(self, data, next=None):
- 25:         self.data = data
+ 25:         pass
  26:         self.next = next
--------------------------------------------------------------------------------
[0.05622 s] survived
   - [#  23] SDL stack5: 
--------------------------------------------------------------------------------
  22: class Node(object):
  23:     
  24:     def __init__(self, data, next=None):
  25:         self.data = data
- 26:         self.next = next
+ 26:         pass
--------------------------------------------------------------------------------
[0.05400 s] survived
   - [#  24] SVD stack5: 
--------------------------------------------------------------------------------
   1: class Stack(object):
   2:     
   3:     def __init__(self, top=None):
-  4:         self.top = top
+  4:         top = top
   5:     
   6:     def push(self, data):
   7:         self.top = Node(data, self.top)
   8:     
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [#  25] SVD stack5: 
--------------------------------------------------------------------------------
   3:     def __init__(self, top=None):
   4:         self.top = top
   5:     
   6:     def push(self, data):
-  7:         self.top = Node(data, self.top)
+  7:         top = Node(data, self.top)
   8:     
   9:     def pop(self):
  10:         if self.top is None:
  11:             return None
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [#  26] SVD stack5: 
--------------------------------------------------------------------------------
   3:     def __init__(self, top=None):
   4:         self.top = top
   5:     
   6:     def push(self, data):
-  7:         self.top = Node(data, self.top)
+  7:         self.top = Node(data, top)
   8:     
   9:     def pop(self):
  10:         if self.top is None:
  11:             return None
--------------------------------------------------------------------------------
[0.05924 s] killed by DYNAMOSA/test_stack5.py::test_case_4

def test_case_4():
        bytes_0 = b"\x94\xc5\xfeh^\xfcI\x14\xdc\xbeR\x8f"
        int_0 = -437
        stack_0 = module_0.Stack(int_0)
>       var_0 = stack_0.push(bytes_0)

DYNAMOSA/test_stack5.py:46: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack5.Stack object at 0x7f3add8776a0>
data = b'\x94\xc5\xfeh^\xfcI\x14\xdc\xbeR\x8f'

>   ???
E   NameError: name 'top' is not defined

stack5:7: NameError
   - [#  27] SVD stack5: 
--------------------------------------------------------------------------------
   6:     def push(self, data):
   7:         self.top = Node(data, self.top)
   8:     
   9:     def pop(self):
- 10:         if self.top is None:
+ 10:         if top is None:
  11:             return None
  12:         data = self.top.data
  13:         self.top = self.top.next
  14:         return data
--------------------------------------------------------------------------------
[0.04712 s] killed by DYNAMOSA/test_stack5.py::test_case_0

def test_case_0():
        stack_0 = module_0.Stack()
>       var_0 = stack_0.pop()

DYNAMOSA/test_stack5.py:8: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack5.Stack object at 0x7f3add8bd810>

>   ???
E   NameError: name 'top' is not defined

stack5:10: NameError
   - [#  28] SVD stack5: 
--------------------------------------------------------------------------------
   8:     
   9:     def pop(self):
  10:         if self.top is None:
  11:             return None
- 12:         data = self.top.data
+ 12:         data = top.data
  13:         self.top = self.top.next
  14:         return data
  15:     
  16:     def peek(self):
--------------------------------------------------------------------------------
[0.05337 s] survived
   - [#  29] SVD stack5: 
--------------------------------------------------------------------------------
   9:     def pop(self):
  10:         if self.top is None:
  11:             return None
  12:         data = self.top.data
- 13:         self.top = self.top.next
+ 13:         top = self.top.next
  14:         return data
  15:     
  16:     def peek(self):
  17:         return self.top.data if self.top is not None else None
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [#  30] SVD stack5: 
--------------------------------------------------------------------------------
   9:     def pop(self):
  10:         if self.top is None:
  11:             return None
  12:         data = self.top.data
- 13:         self.top = self.top.next
+ 13:         self.top = top.next
  14:         return data
  15:     
  16:     def peek(self):
  17:         return self.top.data if self.top is not None else None
--------------------------------------------------------------------------------
[0.05729 s] survived
   - [#  31] SVD stack5: 
--------------------------------------------------------------------------------
  13:         self.top = self.top.next
  14:         return data
  15:     
  16:     def peek(self):
- 17:         return self.top.data if self.top is not None else None
+ 17:         return self.top.data if top is not None else None
  18:     
  19:     def is_empty(self):
  20:         return self.peek() is None
  21: 
--------------------------------------------------------------------------------
[0.05635 s] killed by DYNAMOSA/test_stack5.py::test_case_5

def test_case_5():
        stack_0 = module_0.Stack()
        var_0 = stack_0.pop()
        none_type_0 = None
>       var_1 = stack_0.is_empty()

DYNAMOSA/test_stack5.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
stack5:20: in is_empty
    ???
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack5.Stack object at 0x7f3add8bb4f0>

>   ???
E   NameError: name 'top' is not defined

stack5:17: NameError
   - [#  32] SVD stack5: 
--------------------------------------------------------------------------------
  13:         self.top = self.top.next
  14:         return data
  15:     
  16:     def peek(self):
- 17:         return self.top.data if self.top is not None else None
+ 17:         return top.data if self.top is not None else None
  18:     
  19:     def is_empty(self):
  20:         return self.peek() is None
  21: 
--------------------------------------------------------------------------------
[0.05442 s] survived
   - [#  33] SVD stack5: 
--------------------------------------------------------------------------------
  16:     def peek(self):
  17:         return self.top.data if self.top is not None else None
  18:     
  19:     def is_empty(self):
- 20:         return self.peek() is None
+ 20:         return peek() is None
  21: 
  22: class Node(object):
  23:     
  24:     def __init__(self, data, next=None):
--------------------------------------------------------------------------------
[0.05748 s] killed by DYNAMOSA/test_stack5.py::test_case_5

def test_case_5():
        stack_0 = module_0.Stack()
        var_0 = stack_0.pop()
        none_type_0 = None
>       var_1 = stack_0.is_empty()

DYNAMOSA/test_stack5.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <stack5.Stack object at 0x7f3add9e22c0>

>   ???
E   NameError: name 'peek' is not defined

stack5:20: NameError
   - [#  34] SVD stack5: 
--------------------------------------------------------------------------------
  21: 
  22: class Node(object):
  23:     
  24:     def __init__(self, data, next=None):
- 25:         self.data = data
+ 25:         data = data
  26:         self.next = next
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

   - [#  35] SVD stack5: 
--------------------------------------------------------------------------------
  22: class Node(object):
  23:     
  24:     def __init__(self, data, next=None):
  25:         self.data = data
- 26:         self.next = next
+ 26:         next = next
--------------------------------------------------------------------------------
[0.00000 s] incompetent

ValueError: expression must have Store context but has Load instead

[*] Mutation score [2.20984 s]: 45.8%
   - all: 35
   - killed: 11 (31.4%)
   - survived: 13 (37.1%)
   - incompetent: 11 (31.4%)
   - timeout: 0 (0.0%)
